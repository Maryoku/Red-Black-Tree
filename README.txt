Красно-черные деревья представляют класс сбалансированных деревьев двоичного поиска. Это выражается в том, что заведомо КЧ-дерево с n вершинами имеет высоту не более 2log2(n+1).

Определение. Двоичное дерево поиска, каждой вершине которого приписан цвет (черный или красный) называется КЧ-деревом, если выполнены условия:

1) Каждый лист дерева имеет двух черных фиктивных потомков;
2) Любая красная вершина имеет только черных потомков;
3) На пути от вершины дерева к любому из его листов находится одинаковое число черных вершин, которое называется черной высотой дерева.

Задание.
1. Реализовать структуру/класс RB-trees с интерфейсными операциями Find(key) – поиск вершины по ключу, Add(Key) – добавление вершины, Delete (key) – удаление вершины, FindNext(key) – поиск вершины со следующим значением ключа, FindPrev(key) – поиск вершины с предыдущим значением ключа, Print() – вывод дерева. Реализовать меню с возможностью многократного выполнения различных действий над деревом.
2. Дано двоичное дерево поиска, каждой вершине которого приписан цвет (черный или красный). Проверить, является ли это дерево красно-черным деревом.
3. Дано двоичное дерево поиска. Выяснить, можно ли раскрасить его вершины в красный и черный цвета так, чтобы получилось красно-черное дерево.

Примечание. Для достаточно малых деревьев, для которых раскраска возможна, построить визуализацию.
Замечания.
а) Для заданий 1 - 3 описания деревьев нужно брать из файлов.
б) Каждый студент обязан составить нетривиальные примеры для заданий 2 и 3. Нетривиальность примера определяется преподавателем.
в) Задание может меняться динамически в процессе вашей работы.
